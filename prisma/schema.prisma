generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  admin     @map("ADMIN")
  eventos   @map("EVENTOS")
  marketing @map("MARKETING")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  username       String   @unique
  hashedPassword String
  isActive       Boolean  @default(true)
  role           Role     @default(eventos)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  tvs            Tv[]
  totens         Toten[]
}

model Tv {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  imageUrl  String
  userId    String   @map("user_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Toten {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  images    Image[]
  userId    String   @map("user_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  totenId   String   @map("user_id") @db.ObjectId
  toten     Toten    @relation(fields: [totenId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([totenId])
}
